@model FoodDeliveryWebApplication.Models.DeliveryGuy

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_HomeLayout.cshtml";
}

<section style="padding-top: 10em">

    <div class="container">
        <div class="card mx-auto p-2 col-md-6 col-12 bg-light mt-5">
            <div class="card-body ">
                <h2 class="text-center">Delivery Guy Registration</h2>


                @using (Html.BeginForm("Create", "DeliveryBoy", FormMethod.Post, new { enctype = "multipart/form-data", @id = "cusForm" }))
                {
                    @Html.AntiForgeryToken()

            <div class="form-horizontal">

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @id = "txtName" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group mb-3 row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                    </div>

                    <div class="col-md-10">
                        @Html.RadioButtonFor(model => model.Gender, "Male", new { htmlAttributes = new { @class = "form-control", @id = "rbnGender" } }) Male
                        @Html.RadioButtonFor(model => model.Gender, "Female", new { htmlAttributes = new { @class = "form-control", @id = "rbnGender" } }) Female
                        @Html.RadioButtonFor(model => model.Gender, "Others", new { htmlAttributes = new { @class = "form-control", @id = "rbnGender" } }) Others
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })

                    </div>


                </div>
                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.Dob, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Dob, new { htmlAttributes = new { @class = "form-control", @id = "txtDob", @type = "date" } })
                        @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.ImgUrl, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.TextBoxFor(model => model.ImgUrl, new { type = "file", @class = "form-control", @id = "txtImg" })
                        @Html.ValidationMessageFor(model => model.ImgUrl, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.Pincode, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control", @id = "txtPincode" } })
                        @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group mb-3" id="txtLocation">
                    @Html.LabelFor(model => model.StaffArea, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.StaffArea, new SelectList(" "), "--Select location--", new { @class = "form-control", @id = "ddlArea" })
                        @Html.ValidationMessageFor(model => model.StaffArea, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control", @id = "txtPhone" } })
                        @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.VehicleNo, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.VehicleNo, new { htmlAttributes = new { @class = "form-control", @id = "txtVehicleNo" } })
                        @Html.ValidationMessageFor(model => model.VehicleNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mb-3 row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.VehicleType, htmlAttributes: new { @class = "control-label" })
                    </div>

                    <div class="col-md-9">
                        @Html.RadioButtonFor(model => model.VehicleType, "Two Wheeler", new { htmlAttributes = new { @class = "form-control" } }) Two Wheeler
                        @Html.RadioButtonFor(model => model.VehicleType, "Three Wheeler", new { htmlAttributes = new { @class = "form-control" } }) Three Wheeler
                        @Html.RadioButtonFor(model => model.VehicleType, "Four Wheeler", new { htmlAttributes = new { @class = "form-control" } }) Four Wheeler
                        @Html.ValidationMessageFor(model => model.VehicleType, "", new { @class = "text-danger" })

                    </div>


                </div>

                <div class="form-group mb-3">

                    @Html.LabelFor(model => model.DrivingLicense, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.DrivingLicense, new { htmlAttributes = new { @class = "form-control", @id = "txtDrivLicense" } })
                        @Html.ValidationMessageFor(model => model.DrivingLicense, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.AdhaarNo, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.AdhaarNo, new { htmlAttributes = new { @class = "form-control", @id = "txtAdhaar" } })
                        @Html.ValidationMessageFor(model => model.AdhaarNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control", @id = "txtEmail" } })
                        @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @id = "txtPswd", @type = "password" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @id = "txtCPswd", @type = "password" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>






                <div class="form-group">
                    <div class="mx-auto">
                        <input type="submit" value="Register" class="btn btn-primary" />
                        <input type="button" value="Clear" id="Clear" class="btn btn-danger" />
                    </div>
                </div>
            </div>
                }
            </div>
        </div>
    </div>
</section>
<br />
<br />
<br />



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/CreatedScripts/NavIconHide.js"></script>
<script>
    $(document).ready(function () {

        $("#txtLocation").hide();
        $("#txtPincode").change(function () {

            var inputPincode = $("#txtPincode").val();
            var url = "/DeliveryBoy/GetLocation"
            $.ajax({
                url: url,
                data: { 'pincode': inputPincode },
                type: "GET",
                success: function (data) {
                    if ($("#txtPincode").valid() == true) {
                        $("#txtLocation").show();
                    }
                    else {
                        $("#txtLocation").hide();
                    }

                    $("#ddlArea").empty();
                    $.each(data, function (index, row) {
                        $("#ddlArea").append("<option value='" + row.Name + "'>" + row.Name + "</option>")
                    })

                },
                error: function (data) {
                    alert("Failed to retrieve location details");

                }
            })
        })
    })

</script>

<script>
    $("#Clear").click(function () {
        $("#txtName").val('');
        $("#rbnGender").prop('checked', false);
        $("#txtDob").val('');
        $("#fupImage").val('');
        $("#txtPincode").val('');
        $("#txtVehicleNo").val('');
        
        $("#txtDrivLicense").val('');
        $("#txtAdhaar").val('');
        $("#txtEmail").val('');
        $("#txtPswd").val('');
        $("#txtCPswd").val('');



    })
</script>
